Команды для заполнения базы через django shell 

from news.models import *
u1 = User.objects.create(username='Max', first_name='Maxim')
a1 = Author.objects.create(authorUser=u1)
u2 = User.objects.create(username='Den', first_name='Denis')
a2 = Author.objects.create(authorUser=u2)
Author.objects.all().values('authorUser')

c1 = Category.objects.create(name='Math')
c2 = Category.objects.create(name='Biology')
c3 = Category.objects.create(name='Physics')
c4 = Category.objects.create(name='Astronomy')
Category.objects.all().values('name', 'pk')

p1 = Post.objects.create(author=a1, categoryType='NW', title='First post', text='Long read text')
p2 = Post.objects.create(author=a1, categoryType='AR', title='Second post', text='Что то еще')
p3 = Post.objects.create(author=a2, categoryType='AR', title='Another post', text='И еще немного')
Post.objects.all().values('author','categoryType','title','text','pk')

p1.postCategory.add(c1,c2)
p2.postCategory.add(c2)
p3.postCategory.add(c1)
Post.objects.all().values('author','categoryType','title','text','postCategory')

cm1 = Comment.objects.create(commentUser=u1, commentPost = p1, text = 'первый комментарий')
cm2 = Comment.objects.create(commentUser=u2, commentPost = p2, text = 'еще коммент')
cm3 = Comment.objects.create(commentUser=u1, commentPost = p3, text = 'топ')
cm4 = Comment.objects.create(commentUser=u2, commentPost = p3, text = 'мусор')
cm5 = Comment.objects.create(commentUser=u1, commentPost = p1, text = 'последний')
Comment.objects.all().values('commentUser','commentPost','text','pk')

Post.objects.get(pk=1).like()
Post.objects.get(pk=1).like()
Post.objects.get(pk=1).like()
Post.objects.get(pk=2).dislike()
Post.objects.get(pk=3).like()
Post.objects.all().values('author','categoryType','title','text','rating')

Comment.objects.get(pk=1).like()
Comment.objects.get(pk=1).like()
Comment.objects.get(pk=2).dislike()
Comment.objects.get(pk=3).like()
Comment.objects.get(pk=4).like()
Comment.objects.all().values('commentUser','commentPost','text','rating')

Author.objects.get(authorUser=u1).update_rating()
Author.objects.get(authorUser=u2).update_rating()
Author.objects.all().values('authorUser', 'ratingAuthor')

top_a = Author.objects.all().order_by('-ratingAuthor').values('authorUser','ratingAuthor')[0]
top_p = Post.objects.all().order_by('-rating')[0]

print(top_p.author.authorUser.username," | ",top_p.rating," | ",top_p.title," | ",top_p.preview())

for i in Comment.objects.filter(commentPost = top_p.pk): print(i.dateCreation.strftime('%m/%d/%Y')," | ",i.commentUser.username," | ",i.rating," | ",i.text)